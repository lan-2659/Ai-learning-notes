

'''
'r'：默认模式，用于以只读方式打开文件。文件的指针将放在文件的开头。如果文件不存在，会引发 FileNotFoundError。

'w'：写入模式，用于打开文件并写入内容。如果文件已存在，则会先清空文件的内容，然后写入新内容；如果文件不存在，则创建新文件。

'a'：追加模式，用于在文件末尾添加新内容。如果文件不存在，则创建新文件。文件指针将放在文件的末尾。

'r+'：读取和写入模式，用于同时读取和写入文件。文件指针将放在文件的开头。如果文件不存在，会引发 FileNotFoundError。

'a+'：追加和读取模式，用于在文件末尾追加内容并同时进行读取。如果文件不存在，则创建新文件。文件指针将放在文件的末尾。

添加 'b' 到模式字符串中，如 'rb'、'wb'、'ab'、'r+b' 等，表示以二进制模式打开文件。用于处理非文本文件，如图片、视频等。

默认情况下，文件以文本模式打开，可以省略 't'。文本模式下，文件内容以字符串的形式处理。
'''

# 使用示例
from pathlib import Path
path = Path('D:\Python：study\基础语法学习\pi_digits.txt')
with open(path, 'rb') as file:          
    print(file.read())

'''
read(size): 读取文件的全部内容，或者文件指针后的 size 个字符，返回一个字符串。
readline(size): 读取文件的一行内容，或者该行的前 size 个字符，返回一个字符串。
readlines(): 读取文件的所有行并返回一个列表，每个元素是文件的一行。

write(string): 将字符串写入文件。在写模式下会覆盖文件中原有的内容，再追加模式下会在文件末尾添加内容

seek(offset, whence=0): 移动文件指针到指定位置。offset 表示偏移量，whence 表示偏移相对位置，0 表示从文件开头偏移，1 表示从当前位置偏移，2 表示从文件末尾偏移。
# seek()方法的偏移量是按字节计算的，需要注意多字节字符，且只有在二进制模式下才能精准执行
'''
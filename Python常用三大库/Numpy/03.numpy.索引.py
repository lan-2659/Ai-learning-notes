import numpy as np

# 切片：[start:stop:step],stop是不包含的
# numpy数组切片，可以分行方向切片，列方向切片

a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
# 查询第一列数据
# ...:表示保留整行/列数据，等价于::
print(a[..., 0])

# 查询第一行第一、二列数据
print(a[0, 0:2])

# 查询第二、三行，第二、三列数据
print(a[1:3, 1:3])

# 查询第二行、第二列数据
print(a[1, 1])

# 查询第二、三行数据
print(a[1:3, ...])

# 整数数组索引
# 主要用来访问数组中特定位置的元素
a = np.array([[1, 2, 3], [4, 5, 6]])

print(a[[0, 0, 1], [1, 2, 0]])

# 获取4*3数组的四个角上的元素
a = np.arange(12)
a.shape = (4, 3)

print(a[[0, 0, -1, -1], [0, -1, 0, -1]])

# 布尔索引：使用条件表达式来访问满足条件的元素
# 一维数组布尔索引
a = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])
idx = a > 5
print(idx)
a1 = a[idx]
print(a1)

# 二维数组布尔索引
a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print(a[a > 5])

# 切片布尔索引
a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print(a[a[:, 2] > 3])

print(a[:, a[1] > 3])

# 逻辑运算符:&-与，|-或，~-非
# 逻辑运算符的每个子条件表达式要用()括起来
a = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
idx = (a > 5) & (a < 9)
print(idx)
print(a[idx])

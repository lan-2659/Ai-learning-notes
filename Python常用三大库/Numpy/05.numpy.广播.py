# 广播
"""
NumPy 的 广播是一种处理不同形状数组之间运算的机制

目的：要把两个不同形状的数组变成相同形状的
核心: 扩展维度较小的数组，使其与较大数组的形状兼容


广播的规则：
    维度对齐：
        若两个数组的维度数不同，形状较小的数组会在左侧补1，直到维度数相同
        
    形状兼容性检查：
        对应维度的大小要么相等，要么其中一个为1（不满足这一条件就无法广播）
    
    形状变形：
        若某个维度的大小为1，则沿该维度复制数据以匹配另一数组的维度大小


广播的全过程：(以形状为 (2, 3, 4) 和 (4,) 的两个数组为例)
    首先将维度为 (4,) 的数组的形状变为 (1, 1, 4)
    然后检查两个数组对应的维度的值是否要么相等，要么其中一个为1(检查通过可以广播)
    最后，沿维度值为1的维度复制数据，以匹配另一个数组的维度大小（形状为 (1, 1, 4) 的数组就被广播为 (2, 3, 4)）

    
广播的具体案例：

    import numpy as np

    a = np.array([[1, 2, 3], [4, 5, 6]])    # a的形状是 (2, 3)
    b = np.array([10, 20, 30])              # b的形状是 (3,) ，可以被广播为 (2, 3)
    c = a + b
    print(c)


    arr = np.array([1, 2, 3])
    result = arr + 1            # 标量1的原始形状为 ()（零维数组），可以被广播为任意形状
    print(result)


    arr2d = np.array([[1, 2, 3], [4, 5, 6]])    # 创建一个形状为 (2, 3) 的二维数组
    arr2d_broadcast = np.array([[10, 20, 30]])  # 创建一个形状为 (1, 3) 的二维数组，可以被广播为 (2, 3)
    result = arr2d + arr2d_broadcast
    print(result)


    a = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])     # a的形状是 (3,3)，无发被广播为 (2,3)
    b = np.array([[10, 20, 30], [40, 50, 60]])          # b的形状是 (2,3)，无法被广播为 (3,3)
    c = a + b                                           # 报错，无法广播
    print(c)
"""









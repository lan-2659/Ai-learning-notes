# 解包（也称为解构）是一种非常方便的功能，用于将可迭代对象（如列表、元组等）中的值赋给多个变量


# 基本解包
"""
a, b, c = [1, 2, 3]   # 将可迭代对象中的值赋给变量(使用基本解包时需注意：变量数量必须与元素数量一致)
print(a, b, c)        # 输出：1 2 3
"""


# 星号解包(*)
"""
a, *b, c = [1, 2, 3, 4, 5]     
print(a)  # 1
print(b)  # [2, 3, 4]（中间所有元素）
print(c)  # 5

# *a, *b, c = [1, 2, 3, 4, 5]   这样会报错，一个解包表达式只能有一个星号变量

# 极端情况
x, *y = [1]
print(x, y)  # 1, []
"""


# 函数参数解包 (这个语法只允许在函数传参时使用)
"""
位置参数解包(*):
    def func(a, b, c):
        print(a + b + c)

    args = [1, 2, 3]
    func(*args)  # 输出: 6


关键字参数解包(**):
    def func(x, y):
        print(x, y)

    kwargs = {'x': 1, 'y': 2}
    func(**kwargs)  # 输出: 1 2
"""


# 嵌套解包
"""
a, (b, c), d = [1, [2, 3], 4]
print(a, b, c, d)       # 1 2 3 4

在进行解包时结构必须严格匹配
"""


# 补充：字典解包
"""
dict_x = {"Alice": "2341", "Beth": "9102", "Cecil": "3258"}

a, b, c = dict_x    # 这样只能解包字典的键
print(a, b, c)

print(*dict_x)      # 单星号的解包，输出字典的每一个键
"""
